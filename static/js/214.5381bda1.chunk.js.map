{"version":3,"file":"static/js/214.5381bda1.chunk.js","mappings":"qRACA,EAAuB,yBAAvB,EAA+D,iCAA/D,EAA8G,gC,SCIjGA,EAAa,WACxB,IAAAC,GAAoDC,EAAAA,EAAAA,YAAWC,GAAvDC,EAAYH,EAAZG,aAAcC,EAAUJ,EAAVI,WAAYC,EAAaL,EAAbK,cAClC,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUJ,EAAcK,UAAWC,EAASC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAiBC,SAAC,YAGnDC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXG,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,wBACZC,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAAca,EAAEC,OAAOH,MAAM,MAIpD,E,SCtBA,EAA4B,0BCWfd,GAAckB,EAAAA,EAAAA,iBAyD3B,EAvDe,WACb,IAAQC,GAAiBC,EAAAA,EAAAA,KAAjBD,aACRE,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCzB,EAAU0B,EAAA,GAAEzB,EAAayB,EAAA,GAChCC,GAAwBP,EAAAA,EAAAA,UAAS,GAAEQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAQF,EAAaG,IAAI,UAa/BC,EAAAA,EAAAA,YAAU,WACHF,GACLnB,EAAamB,EAAOP,GAAMU,MAAK,SAAAC,GAC7BhB,GAAiB,SAAAiB,GAAQ,OAdA,SAACD,EAAME,GAClC,OAAAC,EAAAA,EAAAA,GAAW,IAAIC,IAAIJ,EAAKK,KAAI,SAAAC,GAAC,MAAI,CAACJ,EAAII,GAAIA,EAAE,KAAGC,SACjD,CAaMC,CAAqB,GAADC,QAAAN,EAAAA,EAAAA,GAAKF,IAAQE,EAAAA,EAAAA,GAAKH,EAAKU,WAAU,SAAAC,GAAI,OAAIA,EAAKC,EAAE,GAAC,GAEzE,GAEF,GAAG,CAAChB,EAAOP,EAAMZ,IAMjB,OACEf,EAAAA,EAAAA,MAACmD,EAAAA,EAAc,CACbjD,UAAWC,EACXiD,WAAY/B,EAAcgC,OAC1BC,KAAM,WAPR1B,EAAQD,EAAO,EAOS,EACtB4B,SAAS,EACTC,QAAQnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,IAAIrD,SAAA,EAEnBC,EAAAA,EAAAA,KAACT,EAAY8D,SAAQ,CACnBhD,MAAO,CACLZ,WAAAA,EACAC,cAAAA,EACAF,aAjCa,SAAAe,GACnBA,EAAE+C,iBACiB,KAAf7D,IACJmC,EAAgB,CAAEC,MAAOpC,IACzBwB,EAAiB,IACnB,GA6BQlB,UAEFC,EAAAA,EAAAA,KAACZ,EAAU,MAEZ4B,IAAiBhB,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAACtB,KAAMjB,MAG1C,C","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchTerm/SearchTerm.module.css?262b","components/SearchTerm/SearchTerm.jsx","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchTerm_form__VTBd0\",\"form__button\":\"SearchTerm_form__button__Er2pJ\",\"form__input\":\"SearchTerm_form__input__AoIjH\"};","import { useContext } from 'react';\nimport { TermContext } from '../Movies/Movies';\n\nimport css from './SearchTerm.module.css';\n\nexport const SearchTerm = () => {\n  const { handleSearch, searchTerm, setSearchTerm } = useContext(TermContext);\n  return (\n    <form onSubmit={handleSearch} className={css.form}>\n      <button type=\"submit\" className={css.form__button}>\n        Search\n      </button>\n      <input\n        className={css.form__input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search for a movie...\"\n        value={searchTerm}\n        onChange={e => setSearchTerm(e.target.value)}\n      />\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"Movies_conteiner__cFPtt\"};","import React, { createContext, useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { useMovieAPI } from '../../api/api';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchTerm } from 'components/SearchTerm/SearchTerm';\nimport { Loader } from 'components/Loader/Loader';\n\nimport css from './Movies.module.css';\n\nexport const TermContext = createContext();\n\nconst Movies = () => {\n  const { searchMovies } = useMovieAPI();\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const removeDuplicatesById = (data, key) => {\n    return [...new Map(data.map(x => [key(x), x])).values()];\n  };\n\n  const handleSearch = e => {\n    e.preventDefault();\n    if (searchTerm === '') return;\n    setSearchParams({ query: searchTerm });\n    setSearchResults([]);\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    searchMovies(query, page).then(data => {\n      setSearchResults(prevData =>\n        removeDuplicatesById([...prevData, ...data.results], item => item.id)\n      );\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query, page, searchMovies]);\n\n  const loadMore = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <InfiniteScroll\n      className={css.conteiner}\n      dataLength={searchResults.length}\n      next={() => loadMore()}\n      hasMore={true}\n      loader={<Loader />}\n    >\n      <TermContext.Provider\n        value={{\n          searchTerm,\n          setSearchTerm,\n          handleSearch,\n        }}\n      >\n        <SearchTerm />\n      </TermContext.Provider>\n      {searchResults && <MoviesList data={searchResults} />}\n    </InfiniteScroll>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchTerm","_useContext","useContext","TermContext","handleSearch","searchTerm","setSearchTerm","_jsxs","onSubmit","className","css","children","_jsx","type","autoComplete","autoFocus","placeholder","value","onChange","e","target","createContext","searchMovies","useMovieAPI","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","_useState5","_useState6","page","setPage","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","then","data","prevData","key","_toConsumableArray","Map","map","x","values","removeDuplicatesById","concat","results","item","id","InfiniteScroll","dataLength","length","next","hasMore","loader","Loader","Provider","preventDefault","MoviesList"],"sourceRoot":""}